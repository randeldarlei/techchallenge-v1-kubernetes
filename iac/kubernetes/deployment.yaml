apiVersion: apps/v1
kind: Deployment
metadata:
  name: techchallenge-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2  
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: sickbanger/techchallenge:v1.1
        ports:
        - containerPort: 8080
        command: ["java", "-jar"]
        args: ["/home/app/target/techchallenge-1.0.0-SNAPSHOT.jar", "--spring.profiles.active=prod"]
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_NAME
        - name: DB_USER
          value: "techchallenge_usr"
        - name: DB_PASSWORD
          value: "P0o9i8u7"
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 512Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: techchallenge-psql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16.2
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: "techchallenge"
        volumeMounts:
        - name: dbdata
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 512Mi
      volumes:
      - name: dbdata
        persistentVolumeClaim:
          claimName: postgres-pvc
